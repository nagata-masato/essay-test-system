name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Check if ESLint config exists
      id: eslint-check
      run: |
        if [ -f ".eslintrc.json" ] || [ -f ".eslintrc.js" ] || [ -f "eslint.config.js" ] || [ -f "eslint.config.mjs" ]; then
          echo "eslint_exists=true" >> $GITHUB_OUTPUT
        else
          echo "eslint_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Lint (if config exists)
      if: steps.eslint-check.outputs.eslint_exists == 'true'
      run: pnpm lint

    - name: Build
      run: pnpm build

  backend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('essay-test-backend-go/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Change to backend directory
      run: cd essay-test-backend-go

    - name: Install dependencies
      run: go mod download
      working-directory: ./essay-test-backend-go

    - name: Run tests
      run: go test -v ./...
      working-directory: ./essay-test-backend-go

    - name: Build
      run: go build -o main ./cmd/server/main.go
      working-directory: ./essay-test-backend-go

  deploy:
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Deploy to production
      run: |
        echo "Deployment steps will be added here"
        # ここにデプロイメントの手順を追加
